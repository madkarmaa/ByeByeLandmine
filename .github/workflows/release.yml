name: Build and Release

on:
    push:
        branches: [master]
    workflow_dispatch:

permissions:
    contents: write

jobs:
    build-and-release:
        runs-on: windows-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Setup .NET 7
              uses: actions/setup-dotnet@v3
              with:
                  dotnet-version: 7.0.407

            - name: Get manifest data
              id: get_manifest_data
              run: |
                  $manifest = Get-Content ./thunderstore/manifest.json | ConvertFrom-Json
                  $name = $manifest.name
                  $description = $manifest.description
                  $version = $manifest.version_number
                  $deps = $manifest.dependencies
                  $website = $manifest.website_url
                  echo "name=$name" >> $env:GITHUB_OUTPUT
                  echo "description=$description" >> $env:GITHUB_OUTPUT
                  echo "version=$version" >> $env:GITHUB_OUTPUT
                  echo "deps=$deps" >> $env:GITHUB_OUTPUT
                  echo "website=$website" >> $env:GITHUB_OUTPUT
              shell: powershell

            - name: Create version tag
              run: |
                  git config --global user.name 'github-actions'
                  git config --global user.email 'github-actions@github.com'
                  git tag v${{ steps.get_manifest_data.outputs.version }}
                  git push origin v${{ steps.get_manifest_data.outputs.version }}

            - name: Build solution
              run: dotnet build

            - name: Zip mod files
              run: Compress-Archive -Path ./thunderstore/* -DestinationPath v${{ steps.get_manifest_data.outputs.version }}.zip
              shell: powershell

            - name: Create release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: v${{ steps.get_manifest_data.outputs.version }}
                  release_name: v${{ steps.get_manifest_data.outputs.version }}
                  draft: false
                  prerelease: false

            - name: Upload mod zip to release
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./v${{ steps.get_manifest_data.outputs.version }}.zip
                  asset_name: v${{ steps.get_manifest_data.outputs.version }}.zip
                  asset_content_type: application/zip
    publish-to-thunderstore:
        runs-on: ubuntu-latest
        needs: build-and-release

        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Install jq
              run: sudo apt install -y jq

            - name: Get manifest data
              id: get_manifest_data
              run: |
                  manifest=$(cat ./thunderstore/manifest.json)
                  name=$(echo "$manifest" | jq -r '.name')
                  version=$(echo "$manifest" | jq -r '.version_number')
                  echo "name=$name" >> $GITHUB_OUTPUT
                  echo "version=$version" >> $GITHUB_OUTPUT

            - name: Download release asset
              id: download_asset
              uses: robinraju/release-downloader@v1.9
              with:
                  latest: true
                  fileName: v${{ steps.get_manifest_data.outputs.version }}.zip

            - name: Publish to Thunderstore
              uses: GreenTF/upload-thunderstore-package@v4.2
              with:
                  namespace: madkarma
                  file: ${{ fromJson(steps.download_asset.outputs.downloaded_files)[0] }}
                  token: ${{ secrets.THUNDERSTORE_TOKEN }}
                  name: ${{ steps.get_manifest_data.outputs.name }}
                  version: ${{ steps.get_manifest_data.outputs.version }}
                  community: lethal-company
                  categories: |
                      bepinex
                      audio
                      clientside
                      mods
